enchant();

var px2;
var py2;
window.onload = function() {

  core = new Core(320, 320);
  core.fps = 16;
  var px = parseInt(sessionStorage.getItem('px'));
  var py = parseInt(sessionStorage.getItem('py'));
  px2 = px;
  py2 = py;
  var audio1 = new Audio("森.mp3");
  audio1.loop = 'true';
  audio1.play();

  core.preload('map01.png', 'player.png');

  core.onload = function() {

    // マップを作成する
    var map = new Map(16, 16);
    map.image = core.assets['map01.png'];
    map.loadData(town.bg1, town.bg2);
    map.collisionData = town.collisionData;
    // フォアグラウンドマップを作成する
    var foregroundMap = new Map(16, 16);
    foregroundMap.image = core.assets['map01.png'];
    foregroundMap.loadData(town.fg);
    
    var stage = new Group();
    stage.addChild(map);

    // プレイヤーを作成する
    var player = new Player(16 * px, 16 * py, map);
    stage.addChild(player);

    stage.addChild(foregroundMap);
    core.rootScene.addChild(stage);

    // rootSceneの「enterframe」イベントリスナ
    core.rootScene.addEventListener('enterframe', function(e) {

      // マップのスクロール処理
      var x = Math.min((core.width  - 16) / 2 - player.x, 0);
      var y = Math.min((core.height - 16) / 2 - player.y, 0);
      x = Math.max(core.width,  x + map.width)  - map.width;
      y = Math.max(core.height, y + map.height) - map.height;
      stage.x = x;
      stage.y = y;

      if (player.isMoving && rand(ENCOUNT_BASE_RATE) < 25) {
        location.href = "battle.html";
      }

    });

    // バーチャルパッドを作成する
    var pad = new Pad();
    pad.x = 0;
    pad.y = 220;
    core.rootScene.addChild(pad);

    var symbol1 = new Symbol(16 * 20 , 16 * 7, 16, 16, 105);
    stage.addChild(symbol1);
    symbol1.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "flame.html";
      }
    });

    var symbol2 = new Symbol(16 * 21 , 16 * 7, 16, 16, 106);
    stage.addChild(symbol2);
    symbol2.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "flame.html";
      }
    });

    var symbol3 = new Symbol(16 * 6, 16 * 14, 16, 16, 121);
    stage.addChild(symbol3);
    symbol3.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "ice.html";
      }
    });

    var symbol4 = new Symbol(16 * 7 , 16 * 14, 16, 16, 122);
    stage.addChild(symbol4);
    symbol4.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "ice.html";
      }
    });

    var symbol5 = new Symbol(16 * 33 , 16 * 14, 16, 16, 137);
    stage.addChild(symbol5);
    symbol5.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "thunder.html";
      }
    });

    var symbol6 = new Symbol(16 * 34 , 16 * 14, 16, 16, 138);
    stage.addChild(symbol6);
    symbol6.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "thunder.html";
      }
    });

    var symbol7 = new Symbol(16 * 20 , 16 * 23, 16, 16, 109);
    stage.addChild(symbol7);
    symbol7.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "castle.html";
      }
    });

    var symbol8 = new Symbol(16 * 21 , 16 * 23, 16, 16, 110);
    stage.addChild(symbol8);
    symbol8.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "castle.html";
      }
    });

    var symbol9 = new Symbol(16 * 20 , 16 * 24, 16, 16, 125);
    stage.addChild(symbol9);
    symbol9.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "castle.html";
      }
    });

    var symbol10 = new Symbol(16 * 21 , 16 * 24, 16, 16, 126);
    stage.addChild(symbol10);
    symbol10.addEventListener('enterframe', function(e) {
      if (player.within(this, 10)) {
          location.href = "castle.html";
      }
    });

  }
  core.start();
}


// プレイヤーを作成するクラス
var Player = enchant.Class.create(enchant.Sprite, {
  initialize: function(x , y, map) {
    enchant.Sprite.call(this, 32, 32);
    this.x = x;
    this.y = y;
    var image = new Surface(96, 128);
    image.draw(core.assets['player.png'], 0, 0, 96, 128, 0, 0, 96, 128);
    this.image =image;
    this.isMoving = false; // 移動フラグ(移動中なら「true」)
    this.direction = 0;    // 向き
    // 歩行アニメーションの基準フレーム番号を保持するプロパティ
    this.walk = 0;
    // 攻撃アクション中のフレーム数を保持するプロパティ
    this.acount = 0;
    // 「enterframe」イベントリスナ
    this.addEventListener('enterframe', function() {

      // プレイヤーの移動処理

      // 歩行アニメーションのフレーム切り替え
      this.frame = this.direction * 3 + this.walk;
      // 移動中の処理
      if (this.isMoving) {
        // 「vx」「vy」プロパティの分だけ移動する
        this.moveBy(this.vx, this.vy);
        // 歩行アニメーションの基準フレーム番号を取得する
        this.walk = core.frame % 3;
          // 次のマス(16x16が1マス)まで移動しきったら停止する
          if ((this.vx && (this.x - 8) % 16 == 0) || (this.vy && this.y % 16 == 0)) {
            this.isMoving = false;
            this.walk = 0;
          }
      } else {
        // 移動中でないときは、パッドやキーの入力に応じて、向きや移動先を設定する
        this.vx = this.vy = 0;
        if (core.input.left) {
          this.direction = 1;
          this.vx = -4;
        } else if (core.input.right) {
          this.direction = 2;
          this.vx = 4;
        } else if (core.input.up) {
          this.direction = 3;
          this.vy = -4;
        } else if (core.input.down) {
          this.direction = 0;
          this.vy = 4;
        }
        // 移動先が決まったら、
        if (this.vx || this.vy) {
          // 移動先の座標を求める
          var x = this.x + (this.vx ? this.vx / Math.abs(this.vx) * 16 : 0) + 16;
          var y = this.y + (this.vy ? this.vy / Math.abs(this.vy) * 16 : 0) + 16;
          // その座標が移動可能な場所なら
          if (0 <= x && x < map.width && 0 <= y && y < map.height && !map.hitTest(x, y)) {
            px2 = px2 + (this.vx / 4);
            py2 = py2 + (this.vy / 4);
            sessionStorage.setItem('px', px2);
            sessionStorage.setItem('py', py2); 
            // 移動フラグを「true」にする
            this.isMoving = true;
            // 自身(「enterframe」イベントリスナ)を呼び出す
            // (歩行アニメーションをスムーズに表示するため)
            arguments.callee.call(this);
          }
        }
      }
    });
  }
});

// シンボルを作成するクラス
var Symbol = enchant.Class.create(enchant.Sprite, {
  initialize: function(x, y , w, h, no) {
    enchant.Sprite.call(this, w, h);
    this.x = x;
    this.y = y;
    this.frame = no;
    this.image = core.assets['map01.png'];
  }
});

// 定数

// エンカウント確率(5 / ENCOUNT_BASE_RATE)
ENCOUNT_BASE_RATE = 1000;


// 町のマップデータ
var town = {
  'bg1': [
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,90,91,90,91,90,91,90,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,90,91,90,91,90,91,90,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,90,91,90,91,90,91,90,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,90,91,90,91,90,91,90,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,90,91,90,91,90,91,90,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,90,91,90,91,90,91,90,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,91,90,91,90,91,90,91,90,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]
  ],
  'bg2': [
    [18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,90,91,90,91,90,91,90,91,90,91,18,18,18,18,18,18,18,18,18,18,18,18,18,18],
    [18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,90,91,90,91,90,91,90,91,90,91,18,18,18,18,18,18,18,18,18,18,18,18,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,18,18,90,91,90,91,90,91,90,91,90,91,18,18,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,18,18,90,91,90,91,90,91,90,91,90,91,18,18,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,18,18,90,91,90,91,90,91,90,91,90,91,18,18,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,18,18,90,91,90,91,78,79,90,91,90,91,18,18,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,18,18,90,91,90,91,94,95,90,91,90,91,18,18,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,18,18,18,18,18,18,8,8,18,18,18,18,18,18,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,18,18,18,18,18,18,8,8,18,18,18,18,18,18,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,18,18,18,18,18,18,18,18,18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18,18,18,18,18,18,18,18,18,18],
    [18,18,18,18,18,18,18,18,8,8,8,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,8,8,8,18,18,18,18,18,18,18],
    [18,18,18,18,18,18,18,18,8,8,8,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,8,8,8,18,18,18,18,18,18,18],
    [18,18,18,18,18,18,18,18,8,8,8,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,8,8,8,18,18,18,18,18,18,18],
    [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8],
    [18,18,18,18,18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18,18,18,18],
    [18,18,18,18,18,18,8,8,8,8,8,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,8,8,8,8,8,18,18,18,18,18],
    [18,18,18,18,18,18,8,8,8,8,8,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,8,8,8,8,8,18,18,18,18,18],
    [18,18,18,18,18,18,8,8,8,8,8,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,8,8,8,8,8,18,18,18,18,18],
    [18,18,18,18,18,18,18,18,18,18,18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18,18,18,18,18,18,18,18,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,18,18],
    [18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],
    [18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18]
  ],
  collisionData: [
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
  ],
  fg: [
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
  ]
} 


